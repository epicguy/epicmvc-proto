// Generated by CoffeeScript 1.3.3
(function() {
  'use strict';

  var TagExe,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  TagExe = (function(_super) {

    __extends(TagExe, _super);

    function TagExe() {
      return TagExe.__super__.constructor.apply(this, arguments);
    }

    TagExe.prototype.varGet3 = function(view_nm, tbl_nm, col_nm, format_spec) {
      var val;
      val = TagExe.__super__.varGet3.call(this, view_nm, tbl_nm, col_nm, format_spec);
      if (val === void 0) {
        val = "" + tbl_nm + "/" + col_nm;
      }
      return val;
    };

    TagExe.prototype.varGet2 = function(tbl_nm, col_nm, format_spec, sub_nm) {
      var val;
      val = TagExe.__super__.varGet2.call(this, tbl_nm, col_nm, format_spec, sub_nm);
      if (val === void 0) {
        val = "" + tbl_nm + "/" + col_nm;
      }
      return val;
    };

    TagExe.prototype.Tag_foreach = function(oPt) {
      try {
        return TagExe.__super__.Tag_foreach.call(this, oPt);
      } catch (e) {
        return '&lt;epic:foreach table="' + oPt.attrs.table + '"&gt; - ' + e.message;
      }
    };

    return TagExe;

  })(window.EpicMvc.Model.TagExe$Base);

  window.EpicMvc.Model.TagExe$BaseDevl = TagExe;

}).call(this);
