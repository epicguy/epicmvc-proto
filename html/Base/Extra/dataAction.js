// Generated by CoffeeScript 1.4.0
(function() {
  var dataAction,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  dataAction = function(type, data_action, data_params) {
    var action_specs, do_action, f, group, interesting, item, one_spec, prevent, spec_action, spec_type, _base, _i, _len, _ref;
    f = 'Base:E/dataAction:on[data-e-action]' + type;
    if (typeof (_base = E.option).activity === "function") {
      _base.activity(type);
    }
    action_specs = data_action.split(',');
    do_action = true;
    prevent = false;
    for (_i = 0, _len = action_specs.length; _i < _len; _i++) {
      one_spec = action_specs[_i];
      _ref = one_spec.split(':'), spec_type = _ref[0], spec_action = _ref[1], group = _ref[2], item = _ref[3], interesting = _ref[4];
      if (!spec_action) {
        spec_action = spec_type;
        spec_type = 'click';
      }
      if (spec_type === 'event') {
        E.event(spec_action, type, group, item, interesting, data_params);
      }
      if (do_action && spec_type === type) {
        if (spec_type === 'click') {
          prevent = true;
        }
        do_action = false;
        E.action(spec_action, data_params);
      }
    }
    return prevent;
  };

  E.Extra.dataAction$Base = dataAction;

  E.event = function(name, type, group, item, interesting, params) {
    var event_names, _ref;
    if (interesting !== 'all') {
      event_names = interesting.split('-');
      if (__indexOf.call(event_names, type) < 0) {
        return;
      }
    }
    if (name === 'Fist') {
      name = (_ref = E.fistDef[group].event) != null ? _ref : name;
    }
    return E[name]().event(name, type, group, item, params);
  };

}).call(this);
