// Generated by CoffeeScript 1.4.0
(function() {
  'use strict';

  var CoreModelJS, ModelJS,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  CoreModelJS = E.ModelJS;

  ModelJS = (function(_super) {

    __extends(ModelJS, _super);

    function ModelJS() {
      return ModelJS.__super__.constructor.apply(this, arguments);
    }

    ModelJS.prototype.action = function(ctx, act, parms) {
      throw new Error("Model (" + this.view_nm + ").action() didn't know action (" + act + ")");
    };

    ModelJS.prototype.loadTable = function(tbl_nm) {
      if (tbl_nm in this.Table) {
        return;
      }
      throw new Error("Model (" + this.view_nm + ").loadTable() didn't know table-name (" + tbl_nm + ")");
    };

    ModelJS.prototype.fistValidate = function(ctx, fistNm, row) {
      throw new Error("Model (" + this.view_nm + ").fistValidate() didn't know fist (" + fistNm + ")");
    };

    ModelJS.prototype.fistGetValues = function(fistNm, row) {
      throw new Error("Model (" + this.view_nm + ").fistGetValues() didn't know fist (" + fistNm + ")");
    };

    ModelJS.prototype.fistGetChoices = function(fistNm, fieldNm, row) {
      throw new Error("Model (" + this.view_nm + ").fistGetChoices() did't know fist:field (" + fistNm + ":" + fieldNm + ")");
    };

    return ModelJS;

  })(CoreModelJS);

  E.ModelJS = ModelJS;

}).call(this);
