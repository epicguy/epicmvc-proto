// Generated by CoffeeScript 1.4.0
(function() {
  'use strict';

  var ViewExe;

  ViewExe = (function() {

    function ViewExe(Epic, loadStrategy) {
      this.Epic = Epic;
      this.loadStrategy = loadStrategy;
    }

    ViewExe.prototype.init = function(template, page) {
      var v;
      this.Epic.log2(':view T:' + template, 'P:' + page, ((function() {
        var _i, _len, _ref, _results;
        _ref = (this.Epic.getInstance('Pageflow')).getStepPath();
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          v = _ref[_i];
          _results.push(v);
        }
        return _results;
      }).call(this)).join('/'));
      this.oTemplate = this.loadStrategy.template(template);
      this.oPage = this.loadStrategy.page(page);
      this.stack = [];
      this.defer = [];
      this.TagExe = this.Epic.getInstance('Tag');
      this.TagExe.resetForNextRequest(template, page);
      return this.current = null;
    };

    ViewExe.prototype.pushDefer = function(code) {
      return this.defer.push(code);
    };

    ViewExe.prototype.doDefer = function() {
      var v, _i, _len, _ref;
      _ref = this.defer;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        v = _ref[_i];
        eval(v.code);
      }
      return true;
    };

    ViewExe.prototype.checkRefresh = function(list) {
      var item, _i, _len;
      for (_i = 0, _len = list.length; _i < _len; _i++) {
        item = list[_i];
        if (item in this.TagExe.refresh_names) {
          return true;
        }
      }
      return false;
    };

    ViewExe.prototype.run = function(current) {
      var out;
      if (current == null) {
        current = this.oTemplate;
      }
      this.stack.push(this.current);
      this.current = current;
      out = this.doAllParts(0);
      this.current = this.stack.pop();
      return out;
    };

    ViewExe.prototype.includePage = function() {
      return this.run(this.oPage);
    };

    ViewExe.prototype.includePart = function(nm) {
      return this.run(this.loadStrategy.part(nm));
    };

    ViewExe.prototype.doAllParts = function(parts_inx) {
      var attr, first, out, tag, tag_self, _i, _len, _ref;
      parts_inx = Number(parts_inx);
      out = '';
      if (parts_inx === 0) {
        out += this.handleIt(this.current[0]);
        parts_inx = this.current.length - 1;
        first = false;
      } else {
        first = true;
        out += this.handleIt(this.current[parts_inx + 3]);
      }
      _ref = this.current[parts_inx];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        tag_self = _ref[_i];
        if (first) {
          first = false;
          continue;
        }
        tag = this.current[tag_self + 1];
        attr = this.current[tag_self + 2];
        out += this.TagExe['Tag_' + tag]({
          parts: tag_self,
          attrs: attr
        });
        out += this.handleIt(this.current[this.current[tag_self][0]]);
      }
      return out;
    };

    ViewExe.prototype.handleIt = function(text_n_vars) {
      var args, cmd, i, out, _i, _ref, _ref1;
      if (typeof text_n_vars === 'string') {
        return text_n_vars;
      }
      out = text_n_vars[0];
      for (i = _i = 1, _ref = text_n_vars.length; _i < _ref; i = _i += 2) {
        _ref1 = text_n_vars[i], cmd = _ref1[0], args = _ref1[1];
        out += this.TagExe[cmd].apply(this.TagExe, args);
        out += text_n_vars[i + 1];
      }
      return out;
    };

    return ViewExe;

  })();

  window.EpicMvc.ViewExe = ViewExe;

}).call(this);
