// Generated by CoffeeScript 1.8.0
(function() {
  var LoadStrategy;

  LoadStrategy = (function() {
    function LoadStrategy(Epic) {
      this.Epic = Epic;
    }

    LoadStrategy.prototype.getArtifact = function(nm, type) {
      var i, pkg, results, _i, _len, _ref, _ref1, _ref2, _ref3;
      results = false;
      if (this.reverse_packages == null) {
        this.reverse_packages = (function() {
          var _i, _ref, _results;
          _results = [];
          for (i = _i = _ref = this.Epic.appconfs.length - 1; _ref <= 0 ? _i <= 0 : _i >= 0; i = _ref <= 0 ? ++_i : --_i) {
            _results.push(this.Epic.appconfs[i]);
          }
          return _results;
        }).call(this);
      }
      _ref = this.reverse_packages;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        pkg = _ref[_i];
        results = (_ref1 = (_ref2 = window.EpicMvc['view$' + pkg]) != null ? (_ref3 = _ref2[type]) != null ? _ref3[nm] : void 0 : void 0) != null ? _ref1 : false;
        if (results !== false) {
          break;
        }
      }
      if (results === false) {
        console.log('NO FILE FOUND! ' + nm);
      }
      return results;
    };

    LoadStrategy.prototype.getCombinedAppConfs = function() {
      var pkg, result, _i, _len, _ref;
      result = {};
      _ref = this.Epic.appconfs;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        pkg = _ref[_i];
        window.$.extend(true, result, window.EpicMvc['app$' + pkg]);
      }
      return result;
    };

    LoadStrategy.prototype.fist = function(grp_nm) {
      return window.EpicMvc['fist$' + grp_nm];
    };

    LoadStrategy.prototype.template = function(nm) {
      return this.getArtifact(nm, 'tmpl');
    };

    LoadStrategy.prototype.page = function(nm) {
      return this.getArtifact(nm, 'page');
    };

    LoadStrategy.prototype.part = function(nm) {
      return this.getArtifact(nm, 'part');
    };

    return LoadStrategy;

  })();

  window.EpicMvc.Extras.LoadStrategy$Base = LoadStrategy;

}).call(this);
