// Generated by CoffeeScript 1.4.0
(function() {
  'use strict';

  var Issue;

  Issue = (function() {

    function Issue(Epic) {
      this.Epic = Epic;
      this.issue_list = [];
    }

    Issue.Make = function(epic, type, value_list) {
      var issue;
      issue = new window.EpicMvc.Issue(epic);
      issue.add(type, value_list);
      return issue;
    };

    Issue.prototype.add = function(type, msgs) {
      var class_name;
      class_name = 'none';
      switch (type) {
        case 'TEXT':
          return this.issue_list.push({
            type: 'text',
            text: msgs
          });
        default:
          if (/^[A-Z_]+$/.test(type)) {
            return this.issue_list.push({
              type: 'token',
              token: type,
              values: msgs
            });
          } else {
            return this.issue_list.push({
              type: 'unknown',
              text: msgs
            });
          }
      }
    };

    Issue.prototype.call = function(function_call_returning_issue_or_null) {
      if (function_call_returning_issue_or_null) {
        this.addObj(function_call_returning_issue_or_null);
      }
    };

    Issue.prototype.addObj = function(issue_obj) {
      var issue, _i, _len, _ref;
      if (typeof issue_obj !== 'object' || !('issue_list' in issue_obj)) {
        return;
      }
      _ref = issue_obj.issue_list;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        issue = _ref[_i];
        this.issue_list.push(issue);
      }
    };

    Issue.prototype.count = function() {
      return this.issue_list.length;
    };

    Issue.prototype.asTable = function() {
      var issue, _i, _len, _ref, _ref1, _results;
      _ref = this.issue_list;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        issue = _ref[_i];
        _results.push({
          issue: (_ref1 = issue.text) != null ? _ref1 : issue.token
        });
      }
      return _results;
    };

    return Issue;

  })();

  window.EpicMvc.Issue = Issue;

}).call(this);
