// Generated by CoffeeScript 1.4.0
(function() {
  'use strict';

  var TagExe,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  TagExe = (function(_super) {

    __extends(TagExe, _super);

    function TagExe() {
      return TagExe.__super__.constructor.apply(this, arguments);
    }

    TagExe.prototype.resetForNextRequest = function(bd_template, bd_page) {
      this.bd_template = bd_template;
      this.bd_page = bd_page;
      return TagExe.__super__.resetForNextRequest.apply(this, arguments);
    };

    TagExe.prototype.Tag_page_part = function(oPt) {
      return "<span class=\"dbg-part-box\" title=\"" + oPt.attrs.part + ".part.html\">.</span>" + (TagExe.__super__.Tag_page_part.call(this, oPt));
    };

    TagExe.prototype.Tag_page = function(oPt) {
      return "<span class=\"dbg-part-box\" title=\"" + this.bd_template + ".tmpl.html\">T</span>\n<span class=\"dbg-part-box\" title=\"" + this.bd_page + ".page.html\">P</span>\n" + (TagExe.__super__.Tag_page.call(this, oPt));
    };

    TagExe.prototype.varGet3 = function(view_nm, tbl_nm, col_nm, format_spec) {
      var val;
      try {
        val = TagExe.__super__.varGet3.call(this, view_nm, tbl_nm, col_nm, format_spec);
      } catch (e) {
        if (this.Epic.isSecurityError(e)) {
          throw e;
        }
        val = "&amp;" + view_nm + "/" + tbl_nm + "/" + col_nm + ";[" + e.message + "]";
      }
      if (val === void 0) {
        val = "&amp;" + view_nm + "/" + tbl_nm + "/" + col_nm + ";";
      }
      return val;
    };

    TagExe.prototype.varGet2 = function(tbl_nm, col_nm, format_spec, sub_nm) {
      var val;
      val = TagExe.__super__.varGet2.call(this, tbl_nm, col_nm, format_spec, sub_nm);
      if (val === void 0) {
        val = "&amp;" + tbl_nm + "/" + col_nm + ";";
      }
      return val;
    };

    TagExe.prototype.Tag_foreach = function(oPt) {
      try {
        return TagExe.__super__.Tag_foreach.call(this, oPt);
      } catch (e) {
        if (this.Epic.isSecurityError(e)) {
          throw e;
        }
        return '&lt;epic:foreach table="' + oPt.attrs.table + '"&gt; - ' + e.message;
      }
    };

    return TagExe;

  })(window.EpicMvc.Model.TagExe$Base);

  window.EpicMvc.Model.TagExe$BaseDevl = TagExe;

}).call(this);
