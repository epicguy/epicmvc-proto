// Generated by CoffeeScript 1.4.0
(function() {
  'use strict';

  var bootstrap,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  bootstrap = (function() {

    function bootstrap(Epic) {
      var _this = this;
      this.Epic = Epic;
      this.onPopState = __bind(this.onPopState, this);

      this.very_first = true;
      this.was_popped = false;
      this.baseUrl = window.document.location.pathname;
      this.baseId = "epic-new-page";
      this.basePage = '<div data-role="page" id="epic-new-page" data-theme="a" data-url="empty"></div>';
      this.prefix = 'epic-dc-';
      this.firstId = 'epic-dc-first';
      $('body').html(this.basePage);
      setTimeout((function() {
        return _this.onPopState(true);
      }), 0);
      window.onpopstate = this.onPopState;
      true;
    }

    bootstrap.prototype.getFormData = function() {
      return $('form').serializeArray();
    };

    bootstrap.prototype.form_action = function(out_attrs, click_index, action, value) {
      var o;
      return o = "<button " + (out_attrs.join(' ')) + " onclick=\"EpicMvc.Epic.click(" + click_index + ");return false;\">" + value + "</button>";
    };

    bootstrap.prototype.link_action = function(click_index, id, attr_text, text) {
      var o;
      return o = "<a" + id + " href=\"#\" onclick=\"EpicMvc.Epic.click(" + click_index + ");return false;\"" + attr_text + ">" + text + "</a>";
    };

    bootstrap.prototype.doControl = function(oFi, c_nm, val, c_ty, c_data, wd, mx_len, do_one_radio) {
      var attrs, btn_id, button, choice_option, choice_value, choices, from_id, html, i, id, inputs, msg_id, msgs, s, size, split, to_id, _i, _j, _len, _ref, _ref1;
      html = '';
      c_ty = c_ty.split(':')[0];
      if (c_ty === 'radio' && do_one_radio) {
        c_ty = 'do_one_radio';
      }
      if (val == null) {
        val = '';
      }
      switch (c_ty) {
        case 'upload':
          id = 'U' + this.Epic.nextCounter();
          from_id = 'fr' + id;
          to_id = 'to' + id;
          btn_id = 'bt' + id;
          msg_id = 'ms' + id;
          button = "<span data-theme=\"a\" class=\"ui-btn ui-btn-corner-all ui-shadow ui-btn-up-a\" aria-disabled=\"false\" id=\"" + btn_id + "\">\n<span class=\"ui-btn-inner ui-btn-corner-all\" aria-hidden=\"true\">\n<span class=\"ui-btn-text\">Upload</span></span></span>";
          msgs = "<span class=\"qq-message\" id=\"" + msg_id + "\">" + (oFi.getUploadedMsg(c_nm, val)) + "</span>";
          inputs = "<input class=\"ui-input-text\" type=\"file\" style=\"display:none\" id=\"" + from_id + "\" name=\"upload_" + c_nm + "\" value=\"" + val + "\" size=\"" + wd + "\">\n<input type=\"hidden\" id=\"" + to_id + "\" name=\"" + c_nm + "\" value=\"" + val + "\">";
          html = "<table style=\"display:inline-block; width:60%\">\n	<tr>\n		<td style=\"width:120px\">" + button + "</td>\n		<td>" + msgs + "</td>\n		<td>" + inputs + "</td>\n	</tr>\n</table>";
          oFi.haveUpload(c_nm, from_id, to_id, btn_id, msg_id);
          break;
        case 'textarea':
          attrs = " name=\"" + c_nm + "\"";
          split = c_data.split(' ');
          for (i = _i = 0, _ref = split.length; _i < _ref; i = _i += 2) {
            attrs += ' ' + split[i].toLowerCase() + '="' + split[i + 1] + '"';
          }
          html += "<textarea" + attrs + ">" + (window.EpicMvc.escape_html(val)) + "</textarea>";
          break;
        case 'password':
        case 'text':
          html += "<input class=\"ui-input-text\" type=\"" + (c_ty.toLowerCase()) + "\" name=\"" + c_nm + "\" value=\"" + val + "\" size=\"" + wd + "\">";
          break;
        case 'do_one_radio':
        case 'radio':
          break;
        case 'pulldown':
          choices = oFi.getChoices(c_nm);
          size = wd ? " size=\"" + wd + "\"" : '';
          html = "<select name=\"" + c_nm + "\"" + size + " data-native-menu=\"false\">";
          _ref1 = choices.options;
          for (i = _j = 0, _len = _ref1.length; _j < _len; i = ++_j) {
            choice_option = _ref1[i];
            choice_value = choices.values[i];
            s = choice_value === val ? ' selected="selected"' : '';
            html += "\n<option value=\"" + (window.EpicMvc.escape_html(choice_value)) + "\"" + s + ">\n	" + (window.EpicMvc.escape_html(choice_option)) + "</option>";
          }
          html += "\n</select>";
      }
      return html;
    };

    bootstrap.prototype.onPopState = function(event) {
      var f, req_inx;
      f = 'E:bootstrap.onPopState: ';
      if (event === true) {
        if (this.was_popped || !this.very_first) {
          return;
        }
      }
      this.was_popped = true;
      if (this.very_first) {
        req_inx = this.Epic.request().addLink({
          _a: 'browser_hash',
          hash: location.hash.substr(1)
        });
        this.Epic.click(req_inx);
      } else {
        if (event.state) {
          this.Epic.setModelState(event.state);
        }
        this.Epic.renderSecure();
      }
    };

    bootstrap.prototype.render = function(content, click_index) {
      var f;
      f = 'E:bootstrap.render: ';
      $('#' + this.baseId).html(content);
      this.handleRenderState(click_index);
      this.was_popped = false;
      this.very_first = false;
    };

    bootstrap.prototype.handleRenderState = function(click_index) {
      var displayHash, f, model_state, new_hash;
      f = 'E:bootstrap.handleRenderState';
      displayHash = this.very_first ? '' : 'click-' + click_index;
      new_hash = this.Epic.getDomCache();
      if (new_hash === false) {
        new_hash = this.Epic.getExternalUrl();
      }
      if (new_hash !== false) {
        displayHash = new_hash;
      }
      model_state = this.Epic.getModelState();
      if (this.very_first) {
        window.history.replaceState(model_state, displayHash, '#' + displayHash);
      } else if (!this.was_popped) {
        window.history.pushState(model_state, displayHash, '#' + displayHash);
      }
      this.very_first = false;
    };

    return bootstrap;

  })();

  window.EpicMvc.Extras.bootstrap$bootstrap = bootstrap;

}).call(this);
