// Generated by CoffeeScript 1.4.0
(function() {
  'use strict';

  var RestAPI;

  RestAPI = (function() {

    function RestAPI(opts) {
      var nm, port, prefix, val, version;
      this.opts = {
        port: '',
        prefix: '',
        version: ''
      };
      for (nm in opts) {
        val = opts[nm];
        this.opts[nm] = val;
      }
      port = String(this.opts.port);
      if (port.length) {
        port = ':' + port;
      }
      if (this.opts.prefix.length) {
        prefix = '/' + this.opts.prefix;
      }
      if (this.opts.version.length) {
        version = '/' + this.opts.version;
      }
      this.route_prefix = "//" + this.opts.host + (port != null ? port : '') + (prefix != null ? prefix : '') + (version != null ? version : '') + "/";
    }

    RestAPI.prototype.GetPrefix = function() {
      return this.route_prefix;
    };

    RestAPI.prototype.D_Request = function(method, route, data) {
      var status;
      status = {
        code: false,
        text: false,
        ok: false
      };
      return (m.request({
        background: true,
        method: method,
        url: this.route_prefix + route,
        data: data,
        unwrapSuccess: function(response) {
          return {
            status: status,
            data: response
          };
        },
        unwrapError: function(response) {
          return {
            status: status,
            data: response
          };
        },
        extract: function(xhr, options) {
          status.code = xhr.status;
          status.text = xhr.statusText;
          if (xhr.status === 200) {
            status.ok = true;
          }
          if (!xhr.responseText.length && xhr.readyState === 4) {
            status.text = 'NetworkError';
            return '{"error":"NETWORK_ERROR"}';
          }
          return xhr.responseText;
        }
      })).then(null, function(e_with_status_n_data) {
        return e_with_status_n_data;
      });
    };

    return RestAPI;

  })();

  E.Extra.RestAPI$Base = RestAPI;

}).call(this);
